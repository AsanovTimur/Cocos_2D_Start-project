{"version":3,"sources":["assets\\scripts\\Player.js"],"names":["cc","Class","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","type","AudioClip","runJumpAction","jumpUp","tween","by","y","easing","jumpDown","sequence","call","playJumpSound","repeatForever","audioEngine","playEffect","playerRotate","num","node","anchorY","anchorX","angle","rotateAction","rotateBy","runAction","onLoad","jumpAction","then","start","onKeyDown","event","keyCode","macro","KEY","a","accLeft","d","accRight","space","accRotate","onKeyUp","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","onDestroy","off","update","dt","Math","abs","x"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // Main character's jump height\r\n        jumpHeight: 0,\r\n        // Main character's jump duration\r\n        jumpDuration: 0,\r\n        // Maximal movement speed\r\n        maxMoveSpeed: 0,\r\n        // Acceleration\r\n        accel: 0,\r\n\r\n        // Jumping sound effect resource\r\n        jumpAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n    },\r\n\r\n    runJumpAction () {\r\n        // Jump up\r\n        var jumpUp = cc.tween().by(this.jumpDuration, {y: this.jumpHeight}, {easing: 'sineOut'});\r\n        // Jump down\r\n        var jumpDown = cc.tween().by(this.jumpDuration, {y: -this.jumpHeight}, {easing: 'sineIn'});\r\n\r\n        // Create a easing and perform actions in the order of \"jumpUp\", \"jumpDown\"\r\n        var tween = cc.tween()\r\n            .sequence(jumpUp, jumpDown)\r\n        // Add a callback function to invoke the \"playJumpSound()\" method we define after the action is finished\r\n            .call(this.playJumpSound, this);\r\n        // Repeat\r\n        return cc.tween().repeatForever(tween);\r\n    },\r\n\r\n    playJumpSound: function () {\r\n        // Invoke sound engine to play the sound\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n\r\n    playerRotate: function (num) {\r\n        this.node.anchorY = this.node.anchorX = 0.5\r\n\r\n      let angle = this.node.angle + num;\r\n      const rotateAction = cc.rotateBy(.3, angle);\r\n      this.node.runAction(rotateAction);\r\n\r\n    },\r\n\r\n    onLoad: function () {\r\n        // Initialize the jump action\r\n        var jumpAction = this.runJumpAction();\r\n        cc.tween(this.node).then(jumpAction).start()\r\n    },\r\n\r\n    onKeyDown (event) {\r\n        // Set a flag when key pressed\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = true;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = true;\r\n                break;\r\n            //HomeWork edit for Test\r\n            case cc.macro.KEY.space:\r\n                this.accRotate = true;\r\n                this.playerRotate(360);\r\n                break;\r\n        }\r\n    },\r\n\r\n    onKeyUp (event) {\r\n        // Unset a flag when key released\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = false;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = false;\r\n                break;\r\n            //HomeWork edit for Test\r\n            case cc.macro.KEY.space:\r\n                this.accRotate = false;\r\n                break;\r\n        }\r\n    },\r\n    onLoad: function () {\r\n        // Initialize jump action\r\n        var jumpAction = this.runJumpAction();\r\n        cc.tween(this.node).then(jumpAction).start()\r\n\r\n        // Acceleration direction switch\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        this.accRotate = false;\r\n        // The main character's current horizontal velocity\r\n        this.xSpeed = 0;\r\n\r\n\r\n        // Initialize the keyboard input listening\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    },\r\n\r\n    onDestroy () {\r\n        // Cancel keyboard input monitoring\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    },\r\n\r\n    update: function (dt) {\r\n        // Update speed of each frame according to the current acceleration direction\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n            if (this.accRotate) {\r\n                this.playerRotate(-360);\r\n                \r\n            }\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n            if (this.accRotate) {\r\n                this.playerRotate(360);\r\n            }\r\n        }\r\n        // Restrict the movement speed of the main character to the maximum movement speed\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n            // If speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        };\r\n        \r\n        // Update the position of the main character according to the current speed\r\n        this.node.x += this.xSpeed * dt;\r\n\r\n        if (this.node.angle == 360 || this.node.angle == -360) {\r\n            this.node.angle = 0;\r\n        }\r\n\r\n\r\n    },\r\n});\r\n"]}